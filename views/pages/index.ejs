<% if (pages) { %>
<nav class="pagesNavigation" aria-label="Page navigation">
	<ul class="pagination">
<% if (pages["is_ajax"]) {
	let link = pages["uri"] + '/page/'+(pages["page"]+1) + '/';
%><li><a href="<%=link%>" class="nextPages btn btn-default" data-loading-text="загружаю...">следующие <span aria-hidden="true">&rarr;</span></a></li><%
}  else {
		if (!pages["first_page"]){%><li><a href="<%=pages["uri"]%>/<%=(pages["query"] ? '?'+pages["query"] : '')%>" aria-label="первая"><span aria-hidden="true">&leftarrow;&nbsp;первая</span></a></li><%}%>
<%
		for (let link = 1; link <= pages["total_pages"]; link++)
		{
			if (pages["page"] == link){%><li class="active"><span><%=link%></span></li><%}
			else {%><li><a href="<%=(link == 1 ? pages["uri"] : pages["uri"]+'/page/'+link)%>/<%=(pages["query"] ? '?'+pages["query"] : '')%>"><%=link%></a></li><%}
		}
		if (!pages["last_page"]){%><li><a  href="<%=pages["uri"]+'/page/'+pages["total_pages"]%>/<%=(pages["query"] ? '?'+pages["query"] : '')%>" aria-label="последняя"><span aria-hidden="true">последняя&nbsp;&rightarrow;</span></a></li><%}%>
	<% }  %>
	</ul>
</nav>
<% if (pages["is_ajax"]) {%>
<script type="text/javascript">
//<!--
(function($)
{
	var pages = MCJS["pages"] || null;
	if (!pages) return;

	var strPages = md5(sPages(pages));

	var page = pages.page;
	var ts = (new Date()).getTime();
	$('.pagesNavigation .nextPages').click(function (event)
	{
		event.preventDefault();
		event.stopPropagation();

		var $self = $(this);
		var clickTs = (new Date()).getTime();
		var next = (parseInt(page, 10) + 1);

		if (clickTs - ts <= 1000 || strPages != md5(sPages(pages)))
			return;
		else
			ts = clickTs;

		if (next > pages.total_pages)
		{
			$self.hide();
			return;
		}

		var sendData = {};
		var uri = pages.uri + '/page/'+next+'/';

		$self.button('loading');

		$.ajax({
			url: uri,
			method: "GET",
			data: sendData,
			dataType: "json"
		})
		.done(function(resData)
		{
			$self.button('reset');
			//console.log(resData);

			if (!resData["pages"] || !resData["html"] || !resData["pages"]["ajaxDataSrc"])
				return;

			var data = getDataSrc(resData["pages"]["ajaxDataSrc"], resData);

			if (!data.length || !MCJS[resData["pages"]["ajaxDataTarget"]])
				return;

			page = resData["pages"]["page"];
			$self.attr('href', resData["pages"]["uri"] +'/page/'+(page+1) +'/');

			//console.log(data);

			for(var i in data)
			{
				if (data[i].hasOwnProperty("previews"))
				preloadImages(data[i]["previews"]);
			}

			MCJS[resData["pages"]["ajaxDataTarget"]] = MCJS[resData["pages"]["ajaxDataTarget"]].concat(data);

			var $htmlContainer = $(resData["pages"]["jQuerySelector"]).parent();

			var minHeight = $(resData["pages"]["jQuerySelector"]).height();

			var $html  = $('<div>'+resData["html"]+'</div>').find(resData["pages"]["jQuerySelector"]);

			$htmlContainer.append($html);

			if (resData["pages"]["last_page"])
				$self.button('reset').hide();

			var $items = $htmlContainer.children().each(function (i, item)
			{
				$(item).css('height', minHeight);
			});
			var $scrollToItem = $($items.get( $items.size() - $html.size()) );

			if ($scrollToItem.size())
			{
				var to = parseInt($scrollToItem.offset().top, 10) - $('#navbarFixedTop').outerHeight();

				$(window).delay(700).scrollTo(to, 1000, {axis:'y', limit: false});
			}
		})
		.fail(function(resData)
		{
			$self.button('reset');
			//console.log(resData);
		});
	});

	function getDataSrc(ajaxDataSrc, resData)
	{
		if (!ajaxDataSrc || !ajaxDataSrc.length || !resData)
			return [];

		for(var i = 0; i < ajaxDataSrc.length; i++)
		{
			var dataSrc = ajaxDataSrc[i];

			if (resData.hasOwnProperty(dataSrc))
			{
				ajaxDataSrc.splice(i, 1);

				if (ajaxDataSrc.length)
					return getDataSrc(ajaxDataSrc, resData[dataSrc]);
				else
					return resData[dataSrc] || [];
			}
		}
		return [];
	}

	function sPages(pages)
	{
		var sPages = '';

		for(var i in pages)
		{
			if (pages.hasOwnProperty(i))
			sPages += pages[i].toString();
		}

		return sPages;
	}
})(jQuery);
//-->
</script>
<%} } %>